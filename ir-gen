#!/bin/bash

if [[ "$1" == '-h' || "$1" == '--help' ]]
then
    ME=$(basename "$0")
    echo "Usage: $ME [record_file|pipe_input]"
    exit 0
fi

get_grep() {
    echo "$RECORD" | grep "$1"
}

get_value() {
    echo "$1" | cut -d " " -f 2
}

get_count() {
    echo $(($(get_grep "$1" | wc -l) - 1))
}

get_param() {
    get_value "$(get_grep "$1" | head -$2 | tail -1)"
}

get_bits() {
    SPACES=$(get_count space)
    PULSES=$(get_count pulse)
    echo $(($SPACES >= $PULSES ? $PULSES : $SPACES))
}

get_trailer() {
    get_value "$(get_grep pulse | tail -1)"
}

get_abs() {
    echo $(($1 >= $2 ? $1 - $2 : $2 - $1))
}

get_pulse_distance() {
echo "bit_pulse = $(get_param pulse 2)
bit_0_space = $B0_SPACE
bit_1_space = $B1_SPACE"
}

get_pulse_length() {
echo "bit_space = $(get_param space 2)
bit_0_pulse = $B0_PULSE
bit_1_pulse = $B1_PULSE"
}

get_scancodes_example() {
echo "[protocols.scancodes]
0x0123456 = 'KEY_POWER'
"
}

get_config_init() {
echo "[[protocols]]
name = $NAME
protocol = $PROTOCOL
bits = $(get_bits)
header_pulse = $(get_param pulse 1)
header_space = $(get_param space 1)
trailer_pulse = $(get_trailer)"
}

if [ ! -z $1 ]
then
    NAME=$(basename "$1")
    RECORD=$(cat "$1")
else
    NAME="-"
    RECORD=$(ir-ctl -r -w -1 --mode2)
    ir-ctl -n
fi

if [ $? -ne 0 ]
then
    exit 1
fi

if [[ "$NAME" == '-' ]]
then
    NAME="autogenerated_$(date +'%s')"
fi

B0_SPACE=$(get_param space 2)
B1_SPACE=$(get_param space 3)
B0_PULSE=$(get_param pulse 2)
B1_PULSE=$(get_param pulse 3)
SPACE_DIFF=$(get_abs $B0_SPACE $B1_SPACE)
PULSE_DIFF=$(get_abs $B0_PULSE $B1_PULSE)

if [ $SPACE_DIFF -ge $PULSE_DIFF ]
then
    PROTOCOL="pulse_distance"
    get_config_init
    get_pulse_distance
else
    PROTOCOL="pulse_length"
    get_config_init
    get_pulse_length
fi

get_scancodes_example
